// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String?
  lastName  String?
  password  String
  role      UserRole @default(USER)

  // Stripe integration
  stripeCustomerId String? @unique

  // Subscription info
  subscription Subscription?

  // Website analyses
  analyses WebsiteAnalysis[]

  // Audit trail
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?

  @@map("users")
}

model Subscription {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  stripeSubscriptionId String @unique
  stripePriceId        String
  stripeCustomerId     String

  status SubscriptionStatus
  plan   SubscriptionPlan

  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean   @default(false)
  canceledAt         DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
}

model WebsiteAnalysis {
  id     String  @id @default(cuid())
  userId String?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  // Website info
  url         String
  domain      String
  title       String?
  description String?

  // Analysis results
  seoScore           Int?
  performanceScore   Int?
  accessibilityScore Int?
  bestPracticesScore Int?

  // Detailed findings
  issues      Json? // Array of issues found
  suggestions Json? // Array of improvement suggestions

  // Generated website info
  generatedSiteUrl String?
  generatedAt      DateTime?

  // Status tracking
  status AnalysisStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("website_analyses")
}

model RateLimitEntry {
  id        String   @id @default(cuid())
  key       String
  createdAt DateTime @default(now())

  @@index([key, createdAt])
  @@map("rate_limit_entries")
}

model GeneratedWebsite {
  id        String   @id @default(uuid())
  files     Json
  audit     Json
  createdAt DateTime @default(now())
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  INCOMPLETE
  INCOMPLETE_EXPIRED
  PAST_DUE
  TRIALING
  UNPAID
}

enum SubscriptionPlan {
  MONTHLY_HEALTH_CHECK
}

enum AnalysisStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}
